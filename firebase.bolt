path /Heroes {
  read() { true }
  write() { true }
}

path /Items {
  read() { true }
  write() { true }
}

path /Guides {
  read() { true }
  write() { true }
}

path /Comments {
  read() { true }
  write() { true }
}

path /Rating {
  read() { true }
  write() { true }
}

path /Members {
  read() { true }
  write() { true }
}

path /Teams {
  read() { true }
  write() { true }
}

path /Players {
  read() { true }
  write() { true }
}

path /Heroes/{name} is Hero {}
path /Items/{name} is Item {}
path /Guides/{id} is Guide {}
path /Comments/{guideId}/{CommentId} is Comment {}
path /Rating/{guideId}/{userId} is Rating {}
path /Members/{name} is Member {}
path /Players/{name} is Player {}
path /Teams/{name} is Team {}

type Hero {
  name: String,
  avatar: String,
  attribute: String,
  roles: String[],
  lore: String,
  strBase: Number,
  agiBase: Number,
  intBase: Number,
  strGain: Number,
  agiGain: Number,
  intGain: Number,
  hp: Number,
  mana: Number,
  hpRegen: Number,
  manaRegen: Number,
  damageMin: Number,
  damageMax: Number,
  armor: Number,
  magicResistance: Number,
  moveSpeed: Number,
  attackRange: Number,
  attackSpeed: Number,
  skills: Any[],
  talents: Any[]
}

type Skill {
  name: String,
  icon: String,
  description: String,
  maxUpgrade: Number,
  minLearnLevel: Number[],
  attributes: Attribute[]
}

type Attribute {
  name: String,
  value: String,
}

type TalentOnLevel {
  talent: String[]
}

type Item {
  name: String,
  icon: String,
  category: String,
  price: Number | Null,
  recipePrice: Number | Null,
  recipe: String[] | Null,
  lore: String,
  stats: Attribute[] | Null,
  abilities: ItemAbility[] | Null
}


type ItemAbility {
  name: String,
  abilityType: String,
  description: String,
  attributes: Attribute[]
}

type Guide {
  memberID: String,
  name: String,
  hero: String,
  dateCreated: String,
  talentTree: Number[],
  learnOrder: Any,
  purchaseCategory: PurchaseCategory[]
}

type LearnOrder {
  isSkill: Boolean,
  slot: Number | Null,
}

type PurchaseCategory {
  name: String,
  items: String[]
}

type Comment {
  memberID: String,
  comment: String,
  dateCreated: Number,
}

type Rating {
  memberID: String,
  rating: Number,
  dateCreated: Number,
}

type Member {
  username: String,
  password: String,
  email: String,
  heroAvatar: String,
  admin: Boolean
}

type Team {
  name: String,
  region: String,
}

type Player {
  name: String,
  avatar: String,
  teamName: String,
  role: String,
  mmrSolo: Number,
  mmrParty: Number,
  matchPlayed: Number,
  heroRanks: HeroRank[]
}

type HeroRank {
  heroName: String,
  score: Number,
}